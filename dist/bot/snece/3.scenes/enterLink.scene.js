"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.enterLinkScene = void 0;
const telegraf_1 = require("telegraf");
const messages_1 = require("../../../common/constant/messages");
const SceneName_1 = require("../../../common/constant/SceneName");
exports.enterLinkScene = new telegraf_1.Scenes.BaseScene(SceneName_1.SceneNames.ENTER_LINK);
exports.enterLinkScene.enter(async (ctx) => {
    const lang = ctx.session.language;
    await ctx.replyWithHTML(messages_1.Messages.EnterLink[lang], telegraf_1.Markup.removeKeyboard());
});
exports.enterLinkScene.on('text', async (ctx) => {
    let link = ctx.message.text;
    let a = link.substring(0, 8);
    if (a !== "https://") {
        link = `https://${link}`;
    }
    ctx.session.link = link;
    await ctx.scene.enter(SceneName_1.SceneNames.TIME_OF_WORK);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50ZXJMaW5rLnNjZW5lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2JvdC9zbmVjZS8zLnNjZW5lcy9lbnRlckxpbmsuc2NlbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQTBDO0FBQzFDLGdFQUE2RDtBQUM3RCxrRUFBZ0U7QUFJbkQsUUFBQSxjQUFjLEdBQUcsSUFBSSxpQkFBTSxDQUFDLFNBQVMsQ0FBWSxzQkFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBRXJGLHNCQUFjLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRTtJQUMvQixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUNsQyxNQUFNLEdBQUcsQ0FBQyxhQUFhLENBQUMsbUJBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsaUJBQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO0FBQy9FLENBQUMsQ0FBQyxDQUFBO0FBRUYsc0JBQWMsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRTtJQUNwQyxJQUFJLElBQUksR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztJQUM1QixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUM1QixJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7UUFDbEIsSUFBSSxHQUFHLFdBQVcsSUFBSSxFQUFFLENBQUM7S0FDNUI7SUFFRCxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDeEIsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxzQkFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ25ELENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFya3VwLCBTY2VuZXMgfSBmcm9tIFwidGVsZWdyYWZcIjtcbmltcG9ydCB7IE1lc3NhZ2VzIH0gZnJvbSBcIi4uLy4uLy4uL2NvbW1vbi9jb25zdGFudC9tZXNzYWdlc1wiO1xuaW1wb3J0IHsgU2NlbmVOYW1lcyB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vY29uc3RhbnQvU2NlbmVOYW1lXCI7XG5pbXBvcnQgeyBWYWNhbmN5TW9kZWwgfSBmcm9tIFwiLi4vLi4vLi4vY29tbW9uL2RiL21vZGVsL3ZhY2FuY3kubW9kZWxcIjtcbmltcG9ydCB7IE15Q29udGV4dCB9IGZyb20gXCIuLi8uLi9wbHVnaW5zL2JvdC5wbHVnaW5cIjtcblxuZXhwb3J0IGNvbnN0IGVudGVyTGlua1NjZW5lID0gbmV3IFNjZW5lcy5CYXNlU2NlbmU8TXlDb250ZXh0PihTY2VuZU5hbWVzLkVOVEVSX0xJTkspO1xuXG5lbnRlckxpbmtTY2VuZS5lbnRlcihhc3luYyAoY3R4KSA9PiB7XG4gICAgY29uc3QgbGFuZyA9IGN0eC5zZXNzaW9uLmxhbmd1YWdlO1xuICAgIGF3YWl0IGN0eC5yZXBseVdpdGhIVE1MKE1lc3NhZ2VzLkVudGVyTGlua1tsYW5nXSwgTWFya3VwLnJlbW92ZUtleWJvYXJkKCkpO1xufSlcblxuZW50ZXJMaW5rU2NlbmUub24oJ3RleHQnLCBhc3luYyAoY3R4KSA9PiB7XG4gICAgbGV0IGxpbmsgPSBjdHgubWVzc2FnZS50ZXh0O1xuICAgIGxldCBhID0gbGluay5zdWJzdHJpbmcoMCwgOClcbiAgICBpZiAoYSAhPT0gXCJodHRwczovL1wiKSB7XG4gICAgICAgIGxpbmsgPSBgaHR0cHM6Ly8ke2xpbmt9YDtcbiAgICB9XG4gICAgXG4gICAgY3R4LnNlc3Npb24ubGluayA9IGxpbms7XG4gICAgYXdhaXQgY3R4LnNjZW5lLmVudGVyKFNjZW5lTmFtZXMuVElNRV9PRl9XT1JLKTtcbn0pO1xuIl19