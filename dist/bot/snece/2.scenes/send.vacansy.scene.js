"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendToAdminScene = void 0;
const tslib_1 = require("tslib");
const telegraf_1 = require("telegraf");
const messages_1 = require("../../../common/constant/messages");
const SceneName_1 = require("../../../common/constant/SceneName");
const findHrVacansy_model_1 = require("../../../common/db/model/findHrVacansy.model");
const vacancy_model_1 = require("../../../common/db/model/vacancy.model");
const telegraph_node_1 = tslib_1.__importDefault(require("telegraph-node"));
const admin_bot_plugin_1 = require("../../plugins/admin.bot.plugin");
exports.sendToAdminScene = new telegraf_1.Scenes.BaseScene(SceneName_1.SceneNames.SEND_TO_ADMIN);
const ph = new telegraph_node_1.default();
exports.sendToAdminScene.enter(async (ctx) => {
    const lang = ctx.session.language;
    let buttons = [];
    buttons.push([telegraf_1.Markup.button.callback("‚úÖ Ha", "‚úÖ"), telegraf_1.Markup.button.callback("‚ùå Yo'q", "‚ùå")]);
    // const img = await addTextOnImage(ctx.session);
    await ctx.replyWithHTML(messages_1.Messages.CheckAndSendVacancy[lang]);
    let msg;
    if (ctx.session.vacancyType == "findWork") {
        msg = (`
Ish joyi kerak:

üë®‚Äçüíº Xodim: ${ctx.session.name}
üïë Yosh: ${ctx.session.age}
üë®‚Äçüíª <b>Yo'nalish: ${ctx.session.direction}</b>
üìö Texnologiya: ${ctx.session.technology}
üá∫üáø Telegram: @${ctx.from.username}
üì± Aloqa: ${ctx.session.connect}
üìç Hudud: ${ctx.session.place}
üí∏ Maosh: ${ctx.session.price}
üë§ Kasbi: ${ctx.session.profession}
üï∞ Murojaat qilish vaqti: ${ctx.session.timeToCall}
üîé Maqsad: ${ctx.session.goal}

${ctx.session.hashtegs}

¬© @${ctx.botInfo.username}
`);
    }
    if (ctx.session.vacancyType == "findHr" && ctx.session.link !== null) {
        msg = (`
Xodim kerak:

üè¢ Idora: ${ctx.session.officeName}
üë®‚Äçüíª <b>Yo'nalish: ${ctx.session.direction}</b>
üìö Texnologiya: ${ctx.session.technology_2}
üá∫üáø Telegram: @${ctx.from.username} 
üìç Hudud: ${ctx.session.place_2}
üë§ Mas'ul: ${ctx.session.responsible}
üï∞ Murojaat vaqti: ${ctx.session.timeToCall_2}
‚è∞ Ish vaqti: ${ctx.session.timeOfWork}
üí∏ Maosh: ${ctx.session.price_2}
üì• Ariza qoldirish: <a href="${ctx.session.link}">Link</a>

${ctx.session.hashtegs}

¬© @${ctx.botInfo.username}
        `);
    }
    if (ctx.session.vacancyType == "findHr" && ctx.session.link === null) {
        msg = (`
Xodim kerak:

üè¢ Idora: ${ctx.session.officeName}
üë®‚Äçüíª <b>Yo'nalish: ${ctx.session.direction}</b>
üìö Texnologiya: ${ctx.session.technology_2}
üá∫üáø Telegram: @${ctx.from.username} 
üìç Hudud: ${ctx.session.place_2}
üë§ Mas'ul: ${ctx.session.responsible}
üï∞ Murojaat vaqti: ${ctx.session.timeToCall_2}
‚è∞ Ish vaqti: ${ctx.session.timeOfWork}
üí∏ Maosh: ${ctx.session.price_2}

${ctx.session.hashtegs}

¬© @${ctx.botInfo.username}
        `);
    }
    ctx.session.msg = msg;
    const uMsg = await ctx.replyWithPhoto({ source: "./uploads/image.jpg" }, {
        caption: msg,
        parse_mode: "HTML",
        reply_markup: {
            inline_keyboard: buttons
        }
    });
    ctx.session.userMsgId = uMsg.message_id;
    ctx.session.img = "./uploads/image.jpg";
    console.log("send vacancy scene : ", ctx.session);
});
exports.sendToAdminScene.action(/‚úÖ/, async (ctx) => {
    await ctx.editMessageReplyMarkup({ inline_keyboard: [] });
    const lang = ctx.session.language;
    let buttons = [];
    buttons.push([telegraf_1.Markup.button.callback("‚úÖ Ha", "‚úÖ"), telegraf_1.Markup.button.callback("‚ùå Yo'q", "‚ùå")]);
    let vac;
    if (ctx.session.vacancyType == 'findWork') {
        let data = {
            userId: ctx.from.id,
            direction: ctx.session.direction,
            name: ctx.session.name,
            age: ctx.session.age,
            technology: ctx.session.technology,
            tgUsername: ctx.from.username,
            phone: ctx.session.connect,
            place: ctx.session.place,
            // minSum: ctx.session.minSum,
            // maxSum: ctx.session.maxSum,
            price: ctx.session.price,
            profession: ctx.session.profession,
            timeToCall: ctx.session.timeToCall,
            goal: ctx.session.goal,
            userMsgId: ctx.session.userMsgId,
            img: ctx.session.img,
            hashtegs: ctx.session.hashtegs
        };
        vac = await vacancy_model_1.VacancyModel.create(data);
    }
    if (ctx.session.vacancyType == 'findHr') {
        let data = {
            userId: ctx.from.id,
            direction: ctx.session.direction,
            officeName: ctx.session.officeName,
            technology: ctx.session.technology_2,
            responsible: ctx.session.responsible,
            place: ctx.session.place_2,
            price: ctx.session.price_2,
            tgUsername: ctx.from.username ? ctx.from.username : null,
            timeOfWork: ctx.session.timeOfWork,
            timeToCall: ctx.session.timeToCall_2,
            // minPrice: ctx.session.minPrice,
            // maxPrice: ctx.session.maxPrice,
            userMsgId: ctx.session.userMsgId,
            addition: ctx.session.addition ? ctx.session.addition : null,
            img: ctx.session.img,
            hashtegs: ctx.session.hashtegs,
            link: ctx.session.link
        };
        vac = await findHrVacansy_model_1.FindHrVacansyModel.create(data);
    }
    const vacInAdmin = await admin_bot_plugin_1.bot_admin.telegram.sendPhoto(
    // 651985244,
    1661832397, {
        source: ctx.session.img
    }, {
        caption: `‚úÖ Malumotlarni tasdiqlang\n${ctx.session.msg}`,
        parse_mode: "HTML",
        reply_markup: {
            inline_keyboard: buttons
        }
    });
    ctx.session.vacancyType == 'findWork'
        ? await vacancy_model_1.VacancyModel.updateOne({ _id: vac._id }, { messageId: vacInAdmin.message_id })
        : await findHrVacansy_model_1.FindHrVacansyModel.updateOne({ _id: vac._id }, { messageId: vacInAdmin.message_id });
    await ctx.replyWithHTML(messages_1.Messages.SendToAdmin[lang]);
    await ctx.scene.enter(SceneName_1.SceneNames.MAIN);
});
exports.sendToAdminScene.action(/‚ùå/, async (ctx) => {
    await ctx.editMessageReplyMarkup({ inline_keyboard: [] });
    const lang = ctx.session.language;
    await ctx.replyWithHTML(messages_1.Messages.Canceled[lang]);
    await ctx.scene.enter(SceneName_1.SceneNames.MAIN);
});
//# sourceMappingURL=data:application/json;base64,