"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendToAdminScene = void 0;
const telegraf_1 = require("telegraf");
const messages_1 = require("../../../common/constant/messages");
const SceneName_1 = require("../../../common/constant/SceneName");
const findHrVacansy_model_1 = require("../../../common/db/model/findHrVacansy.model");
const vacancy_model_1 = require("../../../common/db/model/vacancy.model");
const functions_1 = require("../../../common/service/functions");
const admin_bot_plugin_1 = require("../../plugins/admin.bot.plugin");
exports.sendToAdminScene = new telegraf_1.Scenes.BaseScene(SceneName_1.SceneNames.SEND_TO_ADMIN);
exports.sendToAdminScene.enter(async (ctx) => {
    const lang = ctx.session.language;
    let buttons = [];
    buttons.push([telegraf_1.Markup.button.callback("✅ Ha", "✅"), telegraf_1.Markup.button.callback("❌ Yo'q", "❌")]);
    await ctx.replyWithHTML(messages_1.Messages.CheckAndSendVacancy[lang]);
    let msg = await (0, functions_1.getVacancy)(ctx.session);
    ctx.session.msg = msg;
    const uMsg = await ctx.replyWithPhoto({ source: "./uploads/image.jpg" }, {
        caption: msg,
        parse_mode: "HTML",
        reply_markup: {
            inline_keyboard: buttons
        }
    });
    ctx.session.userMsgId = uMsg.message_id;
    ctx.session.img = "./uploads/image.jpg";
    console.log("send vacancy scene : ", ctx.session);
});
exports.sendToAdminScene.action(/✅/, async (ctx) => {
    await ctx.editMessageReplyMarkup({ inline_keyboard: [] });
    const lang = ctx.session.language;
    let buttons = [];
    buttons.push([telegraf_1.Markup.button.callback("✅ Ha", "✅"), telegraf_1.Markup.button.callback("❌ Yo'q", "❌")]);
    let vac;
    if (ctx.session.vacancyType == 'findWork') {
        let data = {
            userId: ctx.from.id,
            direction: ctx.session.direction,
            name: ctx.session.name,
            age: ctx.session.age,
            technology: ctx.session.technology,
            tgUsername: ctx.from.username,
            phone: ctx.session.phone,
            place: ctx.session.place,
            price: ctx.session.price,
            profession: ctx.session.profession,
            timeToCall: ctx.session.timeToCall,
            goal: ctx.session.goal,
            userMsgId: ctx.session.userMsgId,
            img: ctx.session.img,
            hashtegs: ctx.session.hashtegs,
            vacancyType: ctx.session.vacancyType
        };
        vac = await vacancy_model_1.VacancyModel.create(data);
    }
    if (ctx.session.vacancyType == 'findHr') {
        let data = {
            userId: ctx.from.id,
            direction: ctx.session.direction,
            officeName: ctx.session.officeName,
            technology: ctx.session.technology_2,
            responsible: ctx.session.responsible,
            place: ctx.session.place_2,
            price: ctx.session.price_2,
            tgUsername: ctx.from.username ? ctx.from.username : null,
            timeOfWork: ctx.session.timeOfWork,
            timeToCall: ctx.session.timeToCall_2,
            userMsgId: ctx.session.userMsgId,
            addition: ctx.session.addition ? ctx.session.addition : null,
            img: ctx.session.img,
            hashtegs: ctx.session.hashtegs,
            link: ctx.session.link,
            vacancyType: ctx.session.vacancyType
        };
        vac = await findHrVacansy_model_1.FindHrVacansyModel.create(data);
    }
    const vacInAdmin = await admin_bot_plugin_1.bot_admin.telegram.sendPhoto(
    // 651985244,
    1661832397, {
        source: ctx.session.img
    }, {
        caption: `✅ Malumotlarni tasdiqlang\n${ctx.session.msg}`,
        parse_mode: "HTML",
        reply_markup: {
            inline_keyboard: buttons
        }
    });
    ctx.session.vacancyType == 'findWork'
        ? await vacancy_model_1.VacancyModel.updateOne({ _id: vac._id }, { messageId: vacInAdmin.message_id })
        : await findHrVacansy_model_1.FindHrVacansyModel.updateOne({ _id: vac._id }, { messageId: vacInAdmin.message_id });
    await ctx.replyWithHTML(messages_1.Messages.SendToAdmin[lang]);
    await ctx.scene.enter(SceneName_1.SceneNames.MAIN);
});
exports.sendToAdminScene.action(/❌/, async (ctx) => {
    await ctx.editMessageReplyMarkup({ inline_keyboard: [] });
    const lang = ctx.session.language;
    await ctx.replyWithHTML(messages_1.Messages.Canceled[lang]);
    await ctx.scene.enter(SceneName_1.SceneNames.MAIN);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VuZC52YWNhbnN5LnNjZW5lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2JvdC9zbmVjZS8yLnNjZW5lcy9zZW5kLnZhY2Fuc3kuc2NlbmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQTBDO0FBQzFDLGdFQUE2RDtBQUM3RCxrRUFBZ0U7QUFDaEUsc0ZBQWtGO0FBQ2xGLDBFQUFzRTtBQUN0RSxpRUFBK0Q7QUFFL0QscUVBQTJEO0FBRTlDLFFBQUEsZ0JBQWdCLEdBQUcsSUFBSSxpQkFBTSxDQUFDLFNBQVMsQ0FBWSxzQkFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBRzFGLHdCQUFnQixDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUU7SUFDakMsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFFbEMsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDO0lBQ2pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxpQkFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxFQUFFLGlCQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTNGLE1BQU0sR0FBRyxDQUFDLGFBQWEsQ0FBQyxtQkFBUSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDNUQsSUFBSSxHQUFHLEdBQUcsTUFBTSxJQUFBLHNCQUFVLEVBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3hDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUV0QixNQUFNLElBQUksR0FBRyxNQUFNLEdBQUcsQ0FBQyxjQUFjLENBQUMsRUFBRSxNQUFNLEVBQUUscUJBQXFCLEVBQUUsRUFDbkU7UUFDSSxPQUFPLEVBQUUsR0FBRztRQUNa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Q0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RGLENBQUMsQ0FBQyxNQUFNLHdDQUFrQixDQUFDLFNBQVMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFHakcsTUFBTSxHQUFHLENBQUMsYUFBYSxDQUFDLG1CQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDcEQsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxzQkFBVSxDQUFDLElBQUksQ0FBQyxDQUFBO0FBQzFDLENBQUMsQ0FBQyxDQUFBO0FBRUYsd0JBQWdCLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUU7SUFDdkMsTUFBTSxHQUFHLENBQUMsc0JBQXNCLENBQUMsRUFBRSxlQUFlLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUV6RCxNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUNsQyxNQUFNLEdBQUcsQ0FBQyxhQUFhLENBQUMsbUJBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtJQUNoRCxNQUFNLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLHNCQUFVLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDMUMsQ0FBQyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXJrdXAsIFNjZW5lcyB9IGZyb20gXCJ0ZWxlZ3JhZlwiO1xyXG5pbXBvcnQgeyBNZXNzYWdlcyB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vY29uc3RhbnQvbWVzc2FnZXNcIjtcclxuaW1wb3J0IHsgU2NlbmVOYW1lcyB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vY29uc3RhbnQvU2NlbmVOYW1lXCI7XHJcbmltcG9ydCB7IEZpbmRIclZhY2Fuc3lNb2RlbCB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vZGIvbW9kZWwvZmluZEhyVmFjYW5zeS5tb2RlbFwiO1xyXG5pbXBvcnQgeyBWYWNhbmN5TW9kZWwgfSBmcm9tIFwiLi4vLi4vLi4vY29tbW9uL2RiL21vZGVsL3ZhY2FuY3kubW9kZWxcIjtcclxuaW1wb3J0IHsgZ2V0VmFjYW5jeSB9IGZyb20gXCIuLi8uLi8uLi9jb21tb24vc2VydmljZS9mdW5jdGlvbnNcIjtcclxuaW1wb3J0IHsgYm90LCBNeUNvbnRleHQgfSBmcm9tIFwiLi4vLi4vcGx1Z2lucy9ib3QucGx1Z2luXCI7XHJcbmltcG9ydCB7IGJvdF9hZG1pbiB9IGZyb20gXCIuLi8uLi9wbHVnaW5zL2FkbWluLmJvdC5wbHVnaW5cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBzZW5kVG9BZG1pblNjZW5lID0gbmV3IFNjZW5lcy5CYXNlU2NlbmU8TXlDb250ZXh0PihTY2VuZU5hbWVzLlNFTkRfVE9fQURNSU4pO1xyXG5cclxuXHJcbnNlbmRUb0FkbWluU2NlbmUuZW50ZXIoYXN5bmMgKGN0eCkgPT4ge1xyXG4gICAgY29uc3QgbGFuZyA9IGN0eC5zZXNzaW9uLmxhbmd1YWdlO1xyXG5cclxuICAgIGxldCBidXR0b25zID0gW107XHJcbiAgICBidXR0b25zLnB1c2goW01hcmt1cC5idXR0b24uY2FsbGJhY2soXCLinIUgSGFcIiwgXCLinIVcIiksIE1hcmt1cC5idXR0b24uY2FsbGJhY2soXCLinYwgWW8ncVwiLCBcIuKdjFwiKV0pO1xyXG5cclxuICAgIGF3YWl0IGN0eC5yZXBseVdpdGhIVE1MKE1lc3NhZ2VzLkNoZWNrQW5kU2VuZFZhY2FuY3lbbGFuZ10pO1xyXG4gICAgbGV0IG1zZyA9IGF3YWl0IGdldFZhY2FuY3koY3R4LnNlc3Npb24pO1xyXG4gICAgY3R4LnNlc3Npb24ubXNnID0gbXNnO1xyXG5cclxuICAgIGNvbnN0IHVNc2cgPSBhd2FpdCBjdHgucmVwbHlXaXRoUGhvdG8oeyBzb3VyY2U6IFwiLi91cGxvYWRzL2ltYWdlLmpwZ1wiIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjYXB0aW9uOiBtc2csXHJcbiAgICAgICAgICAgIHBhcnNlX21vZGU6IFwiSFRNTFwiLFxyXG4gICAgICAgICAgICByZXBseV9tYXJrdXA6IHtcclxuICAgICAgICAgICAgICAgIGlubGluZV9rZXlib2FyZDogYnV0dG9uc1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgKTtcclxuICAgIGN0eC5zZXNzaW9uLnVzZXJNc2dJZCA9IHVNc2cubWVzc2FnZV9pZDtcclxuICAgIGN0eC5zZXNzaW9uLmltZyA9IFwiLi91cGxvYWRzL2ltYWdlLmpwZ1wiO1xyXG4gICAgY29uc29sZS5sb2coXCJzZW5kIHZhY2FuY3kgc2NlbmUgOiBcIiwgY3R4LnNlc3Npb24pXHJcblxyXG59KVxyXG5cclxuc2VuZFRvQWRtaW5TY2VuZS5hY3Rpb24oL+KchS8sIGFzeW5jIChjdHgpID0+IHtcclxuICAgIGF3YWl0IGN0eC5lZGl0TWVzc2FnZVJlcGx5TWFya3VwKHsgaW5saW5lX2tleWJvYXJkOiBbXSB9KVxyXG4gICAgY29uc3QgbGFuZyA9IGN0eC5zZXNzaW9uLmxhbmd1YWdlO1xyXG5cclxuICAgIGxldCBidXR0b25zID0gW107XHJcbiAgICBidXR0b25zLnB1c2goW01hcmt1cC5idXR0b24uY2FsbGJhY2soXCLinIUgSGFcIiwgXCLinIVcIiksIE1hcmt1cC5idXR0b24uY2FsbGJhY2soXCLinYwgWW8ncVwiLCBcIuKdjFwiKV0pO1xyXG5cclxuICAgIGxldCB2YWM7XHJcbiAgICBpZiAoY3R4LnNlc3Npb24udmFjYW5jeVR5cGUgPT0gJ2ZpbmRXb3JrJykge1xyXG4gICAgICAgIGxldCBkYXRhID0ge1xyXG4gICAgICAgICAgICB1c2VySWQ6IGN0eC5mcm9tLmlkLFxyXG4gICAgICAgICAgICBkaXJlY3Rpb246IGN0eC5zZXNzaW9uLmRpcmVjdGlvbixcclxuICAgICAgICAgICAgbmFtZTogY3R4LnNlc3Npb24ubmFtZSxcclxuICAgICAgICAgICAgYWdlOiBjdHguc2Vzc2lvbi5hZ2UsXHJcbiAgICAgICAgICAgIHRlY2hub2xvZ3k6IGN0eC5zZXNzaW9uLnRlY2hub2xvZ3ksXHJcbiAgICAgICAgICAgIHRnVXNlcm5hbWU6IGN0eC5mcm9tLnVzZXJuYW1lLFxyXG4gICAgICAgICAgICBwaG9uZTogY3R4LnNlc3Npb24ucGhvbmUsXHJcbiAgICAgICAgICAgIHBsYWNlOiBjdHguc2Vzc2lvbi5wbGFjZSxcclxuICAgICAgICAgICAgcHJpY2U6IGN0eC5zZXNzaW9uLnByaWNlLFxyXG4gICAgICAgICAgICBwcm9mZXNzaW9uOiBjdHguc2Vzc2lvbi5wcm9mZXNzaW9uLFxyXG4gICAgICAgICAgICB0aW1lVG9DYWxsOiBjdHguc2Vzc2lvbi50aW1lVG9DYWxsLFxyXG4gICAgICAgICAgICBnb2FsOiBjdHguc2Vzc2lvbi5nb2FsLFxyXG4gICAgICAgICAgICB1c2VyTXNnSWQ6IGN0eC5zZXNzaW9uLnVzZXJNc2dJZCxcclxuICAgICAgICAgICAgaW1nOiBjdHguc2Vzc2lvbi5pbWcsXHJcbiAgICAgICAgICAgIGhhc2h0ZWdzOiBjdHguc2Vzc2lvbi5oYXNodGVncyxcclxuICAgICAgICAgICAgdmFjYW5jeVR5cGU6IGN0eC5zZXNzaW9uLnZhY2FuY3lUeXBlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhYyA9IGF3YWl0IFZhY2FuY3lNb2RlbC5jcmVhdGUoZGF0YSk7XHJcbiAgICB9XHJcbiAgICBpZiAoY3R4LnNlc3Npb24udmFjYW5jeVR5cGUgPT0gJ2ZpbmRIcicpIHtcclxuICAgICAgICBsZXQgZGF0YSA9IHtcclxuICAgICAgICAgICAgdXNlcklkOiBjdHguZnJvbS5pZCxcclxuICAgICAgICAgICAgZGlyZWN0aW9uOiBjdHguc2Vzc2lvbi5kaXJlY3Rpb24sXHJcbiAgICAgICAgICAgIG9mZmljZU5hbWU6IGN0eC5zZXNzaW9uLm9mZmljZU5hbWUsXHJcbiAgICAgICAgICAgIHRlY2hub2xvZ3k6IGN0eC5zZXNzaW9uLnRlY2hub2xvZ3lfMixcclxuICAgICAgICAgICAgcmVzcG9uc2libGU6IGN0eC5zZXNzaW9uLnJlc3BvbnNpYmxlLFxyXG4gICAgICAgICAgICBwbGFjZTogY3R4LnNlc3Npb24ucGxhY2VfMixcclxuICAgICAgICAgICAgcHJpY2U6IGN0eC5zZXNzaW9uLnByaWNlXzIsXHJcbiAgICAgICAgICAgIHRnVXNlcm5hbWU6IGN0eC5mcm9tLnVzZXJuYW1lID8gY3R4LmZyb20udXNlcm5hbWUgOiBudWxsLFxyXG4gICAgICAgICAgICB0aW1lT2ZXb3JrOiBjdHguc2Vzc2lvbi50aW1lT2ZXb3JrLFxyXG4gICAgICAgICAgICB0aW1lVG9DYWxsOiBjdHguc2Vzc2lvbi50aW1lVG9DYWxsXzIsXHJcbiAgICAgICAgICAgIHVzZXJNc2dJZDogY3R4LnNlc3Npb24udXNlck1zZ0lkLFxyXG4gICAgICAgICAgICBhZGRpdGlvbjogY3R4LnNlc3Npb24uYWRkaXRpb24gPyBjdHguc2Vzc2lvbi5hZGRpdGlvbiA6IG51bGwsXHJcbiAgICAgICAgICAgIGltZzogY3R4LnNlc3Npb24uaW1nLFxyXG4gICAgICAgICAgICBoYXNodGVnczogY3R4LnNlc3Npb24uaGFzaHRlZ3MsXHJcbiAgICAgICAgICAgIGxpbms6IGN0eC5zZXNzaW9uLmxpbmssXHJcbiAgICAgICAgICAgIHZhY2FuY3lUeXBlOiBjdHguc2Vzc2lvbi52YWNhbmN5VHlwZVxyXG4gICAgICAgIH1cclxuICAgICAgICB2YWMgPSBhd2FpdCBGaW5kSHJWYWNhbnN5TW9kZWwuY3JlYXRlKGRhdGEpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgdmFjSW5BZG1pbiA9IGF3YWl0IGJvdF9hZG1pbi50ZWxlZ3JhbS5zZW5kUGhvdG8oXHJcbiAgICAgICAgLy8gNjUxOTg1MjQ0LFxyXG4gICAgICAgIDE2NjE4MzIzOTcsXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzb3VyY2U6IGN0eC5zZXNzaW9uLmltZ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjYXB0aW9uOiBg4pyFIE1hbHVtb3RsYXJuaSB0YXNkaXFsYW5nXFxuJHtjdHguc2Vzc2lvbi5tc2d9YCxcclxuICAgICAgICAgICAgcGFyc2VfbW9kZTogXCJIVE1MXCIsXHJcbiAgICAgICAgICAgIHJlcGx5X21hcmt1cDoge1xyXG4gICAgICAgICAgICAgICAgaW5saW5lX2tleWJvYXJkOiBidXR0b25zXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICApO1xyXG5cclxuICAgIGN0eC5zZXNzaW9uLnZhY2FuY3lUeXBlID09ICdmaW5kV29yaydcclxuICAgICAgICA/IGF3YWl0IFZhY2FuY3lNb2RlbC51cGRhdGVPbmUoeyBfaWQ6IHZhYy5faWQgfSwgeyBtZXNzYWdlSWQ6IHZhY0luQWRtaW4ubWVzc2FnZV9pZCB9KVxyXG4gICAgICAgIDogYXdhaXQgRmluZEhyVmFjYW5zeU1vZGVsLnVwZGF0ZU9uZSh7IF9pZDogdmFjLl9pZCB9LCB7IG1lc3NhZ2VJZDogdmFjSW5BZG1pbi5tZXNzYWdlX2lkIH0pO1xyXG5cclxuXHJcbiAgICBhd2FpdCBjdHgucmVwbHlXaXRoSFRNTChNZXNzYWdlcy5TZW5kVG9BZG1pbltsYW5nXSk7XHJcbiAgICBhd2FpdCBjdHguc2NlbmUuZW50ZXIoU2NlbmVOYW1lcy5NQUlOKVxyXG59KVxyXG5cclxuc2VuZFRvQWRtaW5TY2VuZS5hY3Rpb24oL+KdjC8sIGFzeW5jIChjdHgpID0+IHtcclxuICAgIGF3YWl0IGN0eC5lZGl0TWVzc2FnZVJlcGx5TWFya3VwKHsgaW5saW5lX2tleWJvYXJkOiBbXSB9KVxyXG5cclxuICAgIGNvbnN0IGxhbmcgPSBjdHguc2Vzc2lvbi5sYW5ndWFnZTtcclxuICAgIGF3YWl0IGN0eC5yZXBseVdpdGhIVE1MKE1lc3NhZ2VzLkNhbmNlbGVkW2xhbmddKVxyXG4gICAgYXdhaXQgY3R4LnNjZW5lLmVudGVyKFNjZW5lTmFtZXMuTUFJTilcclxufSlcclxuIl19