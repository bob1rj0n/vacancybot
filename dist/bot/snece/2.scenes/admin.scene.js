"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.adminScene = void 0;
const telegraf_1 = require("telegraf");
const messages_1 = require("../../../common/constant/messages");
const SceneName_1 = require("../../../common/constant/SceneName");
const findHrVacansy_model_1 = require("../../../common/db/model/findHrVacansy.model");
const user_model_1 = require("../../../common/db/model/user.model");
const vacancy_model_1 = require("../../../common/db/model/vacancy.model");
const bot_plugin_1 = require("../../plugins/bot.plugin");
exports.adminScene = new telegraf_1.Scenes.BaseScene(SceneName_1.SceneNames.ADMIN);
exports.adminScene.enter(async (ctx) => {
});
exports.adminScene.action('‚úÖ', async (ctx) => {
    await ctx.editMessageReplyMarkup({ inline_keyboard: [] });
    let Msg, msg;
    const a = (await vacancy_model_1.VacancyModel.find({ messageId: ctx.callbackQuery.message.message_id })).shift();
    const b = (await findHrVacansy_model_1.FindHrVacansyModel.find({ messageId: ctx.callbackQuery.message.message_id })).shift();
    Msg = a ? a : b;
    const user = (await user_model_1.UserModel.find({ userId: Msg.userId })).shift();
    if (Msg.type == 'findWork') {
        msg = (`
Ish joyi kerak:

üë®‚Äçüíº Xodim: ${Msg.name}
üïë Yosh: ${Msg.age}
üë®‚Äçüíª <b>Yo'nalish: ${Msg.direction}</b>
üìö Texnologiya: ${Msg.technology}
üá∫üáø Telegram: @${Msg.tgUsername} 
üì± Aloqa: ${Msg.phone}
üìç Hudud: ${Msg.place}
üí∏ Maosh: ${Msg.price}
üë§ Kasbi: ${Msg.profession}
üï∞ Murojaat qilish vaqti: ${Msg.timeToCall}
üîé Maqsad: ${Msg.goal}

${Msg.hashtegs}

¬© @${ctx.botInfo.username}
        `);
    }
    if (Msg.type == 'findHr' && Msg.link !== null) {
        msg = (`
Xodim kerak:

üè¢ Idora: ${Msg.officeName}
üë®‚Äçüíª <b>Yo'nalish: ${Msg.direction}</b>
üìö Texnologiya: ${Msg.technology}
üá∫üáø Telegram: @${Msg.tgUsername} 
üìç Hudud: ${Msg.place}
üë§ Mas'ul: ${Msg.responsible}
üï∞ Murojaat vaqti: ${Msg.timeToCall}
‚è∞ Ish vaqti: ${Msg.timeOfWork}
üí∏ Maosh: ${Msg.price}
üì• Ariza qoldirish: <a href="${Msg.link}">Link</a>

${Msg.hashtegs}

¬© @bekobod_jobs_bot
        `);
    }
    if (Msg.type == 'findHr' && Msg.link === null) {
        msg = (`
Xodim kerak:

üè¢ Idora: ${Msg.officeName}
üë®‚Äçüíª <b>Yo'nalish: ${Msg.direction}</b>
üìö Texnologiya: ${Msg.technology}
üá∫üáø Telegram: @${Msg.tgUsername} 
üìç Hudud: ${Msg.place}
üë§ Mas'ul: ${Msg.responsible}
üï∞ Murojaat vaqti: ${Msg.timeToCall}
‚è∞ Ish vaqti: ${Msg.timeOfWork}
üí∏ Maosh: ${Msg.price}

${Msg.hashtegs}

¬© @${ctx.botInfo.username}
        `);
    }
    const vacCahn = await ctx.telegram.sendPhoto("@bekobod_job", {
        source: Msg.img
    }, {
        caption: msg,
        parse_mode: "HTML"
    });
    await bot_plugin_1.bot.telegram.sendMessage(Msg.userId, messages_1.Messages.PostedByAdmin[user.language], {
        parse_mode: "HTML",
        reply_to_message_id: Msg.userMsgId,
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: "Link", url: `https://t.me/bekobod_job/${vacCahn.message_id}`
                    }
                ]
            ]
        }
    });
    await ctx.replyWithHTML(`Vakansiya kanalga joylandi!`);
});
exports.adminScene.action('‚ùå', async (ctx) => {
    await ctx.editMessageReplyMarkup({ inline_keyboard: [] });
    const Msg = (await vacancy_model_1.VacancyModel.find({ messageId: ctx.callbackQuery.message.message_id })).shift();
    ctx.session.rejectedMsg = Msg;
    await ctx.scene.enter(SceneName_1.SceneNames.REJECT_VACANSY);
});
//# sourceMappingURL=data:application/json;base64,